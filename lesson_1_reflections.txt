How did viewing a diff between two versions of a file help you see the bug that was introduced?

It made it easier to see where the bug was because it showed two versions of the same line. One version the previous, which worked fine,, and one the newer, which had the bug.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

If you accidently make a typo and didn't mean to change a line, it will take seconds rather than minutes to find that one typo. 


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Manually saving commits will make it so that each commit will make sense. Automatically saving projects will typically have unfinished code and errors that you wouldn't want to commit to.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Programming projects will typically have multiple source code files, thus there will be changes and edits to multiple source files.


How can you use the commands git log and git diff to view the history of files?

Git log will view a list of commits while git diff will show the difference between two files. 


How might using version control make you more confident to make changes that could break something?

It would make me feel more confident because I am able to go back to previous states of my work.


Now that you have your workspace set up, what do you want to try using Git for?

I am using it to make it easier to take risks when developing code and overall becomming a better developer.

